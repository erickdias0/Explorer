
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Erick
 */
public class NewJFrame1 extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame1
     */
    public NewJFrame1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Executar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Arquivo");

        jLabel2.setText("Diretório");

        jLabel4.setText("jLabel4");
        jLabel4.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                        .addGap(27, 27, 27)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextField2))))
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(130, 130, 130))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int x = Integer.parseInt(jLabel4.getText());
        FileExplorer f = new FileExplorer();
        File root = new File("C:\\");
        File[] roots = File.listRoots();
        String filtro = jTextField1.getText();
        String diretorio =jTextField2.getText();
        ArrayList<File> rootstrue = new ArrayList(); 
        for(int dx = 0;dx<roots.length;dx++){
             if(roots[dx].isDirectory()){
                 rootstrue.add(roots[dx]);
             }
         }       
                 
      
       switch(x){
            case 2 : 
               for(File r : rootstrue){ 
                for(File arquivo : r.listFiles()){
                     f.list(arquivo,jTextField1.getText());
   }
               }
                System.out.println("*****FIM DA PESQUISA*****");             
                 this.dispose();
                break;
            case 3 : jLabel2.setEnabled(true);
                     jTextField2.setEnabled(true);
                     
                     File newroot = new File(diretorio);
                     if(newroot.isDirectory()){
                         
                     
                for(File arquivo : newroot.listFiles()){
                f.list(arquivo,filtro);
    }//GEN-LAST:event_jButton1ActionPerformed
                     } else{
                         System.out.println("Caminho informado não é diretório!");
                     }          
                     System.out.println("*****FIM DA PESQUISA*****");  
                
                this.dispose();
                break;
            case 4 : jLabel2.setEnabled(true);
                     jTextField2.setEnabled(true);
                     jLabel1.setEnabled(false);
                     jTextField1.setEnabled(false);
                     
                     
                     File newroot2 = new File(diretorio);
                     if(newroot2.isDirectory()){
                     for(File arquivo : newroot2.listFiles()){
   f.listAll(arquivo);
       }}else{ 
               System.out.println("Caminho informado não é diretório!");
               }
                System.out.println("*****FIM DA PESQUISA*****");  
                this.dispose();
                break;
            case 5: File del = new File(jTextField1.getText());
                    if(del.isFile()){
                        del.delete();
                        System.out.println("Arquivo Deletado!");
                    } else {
                        System.out.println("Caminho inválido!");
                    }
                    System.out.println("*****FIM DA EXCLUSÃO*****");
                    this.dispose();
                    break;
            case 6 : File det = new File(jTextField1.getText());
                    if(det.exists()){ 
                    
                        if(det.isFile()){
                     System.out.print(det.getName());
                     System.out.println(" "+"É um arquivo");
                     System.out.println("Localizado em "+det.getParent());
                     System.out.println("Tamanho total: "+((det.getTotalSpace()+" bytes")));
                     System.out.println("Tamanho total: "+((det.getFreeSpace()+" bytes")));
                     System.out.println("Tamanho total: "+((det.getUsableSpace()+" bytes")));
                     long mod = det.lastModified();
                     System.out.println("Ultima modificação: "+new Date(mod));
                     
                     if(det.canExecute()){
                         System.out.println("Pode ser executado!");
                     }
                     else{
                         System.out.println("Não pode ser executado!");
                     }
                        if(det.canRead()){
                            System.out.println("Pode ser lido!");
                        }
                        
                        else{
                            System.out.println("Não pode ser lido!");
                        }
                        if(det.canWrite()){
                            System.out.println("Pode ser escrito!");
                            
                        }
                        else{
                            System.out.println("Não pode ser escrito!");
                        }
                        if(det.isHidden()){
                            System.out.println("É um arquivo oculto!");
                        }
                        else{
                            System.out.println("Não é oculto!");
                        }
                     System.out.println("*****FIM DA PESQUISA*****");  
                        this.dispose();
                        break;
                        }else if (det.isDirectory()){
                            System.out.print(det.getName());
                            System.out.println(" "+"É um diretório");
                            System.out.println("Localizado em "+det.getParent());
                        }
                    } else {
                        System.out.println("Caminho inválido!");
                        
                     
                     }
                        System.out.println("*****FIM DA PESQUISA*****");  
                        this.dispose();
                        break;
            
            case 7: File org = new File(jTextField1.getText());
                    File dst = new File(jTextField2.getText());
                    if(org.isFile()){
            try {
                f.copy(org,dst);
            }catch (IOException ex) {
                Logger.getLogger(NewJFrame1.class.getName()).log(Level.SEVERE, null, ex);
            }
                    
                 } 
                    
                    else{
                        System.out.println("Caminho original inválido!");
                        
                    }
                    System.out.println("*****FIM DA CÓPIA*****");  
                        this.dispose();
                        break;
       }
       
       
       
    }    

       
       /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JTextField jTextField1;
    public javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
